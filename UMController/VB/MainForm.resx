<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>22, 24</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>50</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAgAoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgICAAUFBQAKCgoADAwMABkZGQA+PhEALi4uADk5IgAyMjIANDQ0ADU1NQBEREQATExMAFpa
        WgB5eVEAZmZmAHNzcwBBtTkAQrY6AEa+SwBGv00AUNJzAFHUdgD6+gEA//8KAP//IQD//yQA//8nAP39
        LQD//zAA//8yAP//PgD//z8AiophAKyscgD//0AA//9EAP//RgD//00A//9OAP//VwD//2MA//9kAP//
        ZgD//2gA//94AP//egD//3sA//9/AEq/uQA8x5YAI/+8AFXdiABW34wAfOaeAF7vrQBE/6oARf+sAEb/
        rQBh9bgAPofXAEKS2wBCk9sAQ5XcAEOW3ABEmd0ARJrdAEWc3gBFnd4ARp/fAEik4QBIpeEASKbhAEmn
        4gBJqeIASqrjAEut5ABMseUATbTmAE215gBOtucAT7noAFy35QBQvOkAUb/qACv/xABN/8AATv/CAE//
        xgBSwusAVczuAFjU8QBY1fEAWtrzAFve9ABl3u8AXv/sAF7n9wBf//gAY//3AICAgACNjY0AlJSUAJWV
        lQCoqKgAqampAKqqqgCirrgAp7K4ALGxsQCysrIAs7OzALa3twC6uroAu7u7ALy8vACB5qoA1taXAPr6
        jgD//4wA//+OAP//kQD//5IA//+VAPLypgD//6AA//+jAP//pwD//6oA//+sAPz+swD//7IA//+zAP//
        tAD//7YA//+5AP//vQD//74AhMHVAK323QDFxcUAycnJAMrKygDLy8sAzMzMAM3NzQDPz88A0NDQANLS
        0gDU1NQA3NzcAN7e3gDs7MkA///BAP//xAD//8kA///KAP//0QD//9MA///bAP//3QD//98Az+DmAOHh
        4QDl5eUA7OzsAP//4gD///AA///0AP//9gD5+fkA////ANF17wAgMPMAhPISAAsAAACE8hIAAAAAAFZu
        7wBDb+8AUxQBAA8AhQAAAAAAUxQBAAAAAAABAAAAAAAAAHDyEgCqbu8AUxQBAAAAAQAQYpoAMVFBAFMU
        AQAAAwAA7PQSAEMAcgBvAHAAIABvAHAAdABpAG8AbgAAADW9AABoyWUAfMllABQAAAABAAAAAAAAAAAA
        AAAQAAAAAAAAAHzJZQABAAAAAAAAAIcTEAD/6ZEA9g2BAJQAAAAAAAAAAAAAAAAAAAAQ8xIAAAC7AJAb
        AAAAAAAAFg6BAJAbAAAAALsAlAAAADAAAAAxAAAARQmSAE4JkgCE9hIAJAACAHD0EgAFAAAAkEGSAADw
        /wACAAAASPMSAPqtkgCQAgIAAAAAAHAJkgDA5JgAbz6SAGI+kgAIAgAAKPcSAAD3EgBkAAAAzPcSAMnp
        QAAAAAAAAAAAAG6lpaWlpaWlpaWlpaSmpKayAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKZu
        paWlpaWlpaWlpaWlpaWlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWlpaWlpaWlpaWlpaWl
        paSmsgAAAAAAAAAAAAAAAAsAAAAAALIAAAAAAAAAAAAAAKakpaWlpaSlpaSlpaWlpaWmpAAAAAAAAAAA
        AAAAAKYAAAAAALIAAAAAAAAAAAAAAKakpaSlpqWlpqWlpaWlpVOkprIAAAAAAAAAAAAAAKaUAAAAALKU
        AAAAAAAAAAAAAKakpqRubm5ubm5ucW1ubVRubm4AAAAAAAAAAAAAAKaOAAAAALKyg4ODg4MAAAAAAKWl
        paVupUFCR05OQUJLTqOmpKYAAAAAAAAAAAAAAKWOaQAAALKyGhoaGhonAAAAAKakpaVxPkJLTU5UQkdO
        VKWlpaUAAAAAAAAAJyQnJKUIHR0aHbKyBickJyR6nJycnJycnJycnJycnJycnJycnJycnJycnJycei0q
        LS0qKqaUgyoqKrKysi0tLX2aAJqamoiaiJqIi05UW15iVFyMmpqImpqImpqImoiaiJqIGKWOACcnJ7Ko
        snd3d5moAACDg4ODg4ODQks3NzdiS1pgg4ODg4ODg4ODiIOIg4iDdqWOpyQkJLKnsjEuLnqeAAAAgYGB
        foGBPkdZYTlcQk5+gX6BgX6BgYGDgYGBgYGBI6WOmh4eHrIisikpKSl+AAAAAJempKRuPUJXZDlbpKak
        pqSkpqYAAAAAAACnfn5+D6aOlB0aHbKysh4eHh4tAAAAAJSmpKZupqRZYTmlpaakpqSmpKQAAAAAAAAA
        AAAADaaOjgAAALKyshkZGRkeAAAAAJSUjpQQjnUMDjuOlI6Ujo6mpKYAAAAAAAAAAAAACaaOlAAAAAmy
        sgAAAAAAAAAAAJSOlJQQjgUNDgmOjpSOlI6UpKYAAAAAAAAAAAAAAKaObgAAAACysgAAAAAAAAAAAG4A
        lI4QjgUMDgkDlI6UjpSylKYAAAAAAAAAAAAAAGeUAAAAAABysgAAAAAAAAAAAACyAJQQlAUMDgmyjpSO
        lI6UlKQAAAAAAAAAAAAAAACUAAAAAAAAsgAAAAAAAAAAAAAAsgAQjgUMDgmyjpSUjpSUspQAAAAAAAAA
        AAAAAAAAAAAAAAAAcgAAAAAAAAAAAAAAAJSyAI2kAJRpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACyaHKkAJRpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAaHSkAJRpZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaHKkAJdpZQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaHSkAJRpZQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaHKkjpZpZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAaHKkppRpZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAaHRZZDluEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACysrIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAshU2OBYTsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAshU2PBcTsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKysrIDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAIinAJ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAejGBiH4tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJHpWZDQuGgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJHpZZDsxAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABZZDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAzMnIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANDQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsrIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAH////fBjwAAf///8ARPAAA//ffwAc8AAD/99/
        AITwAAH/zz93SfAAAf/PAXcc8AAB/8cAAADwAAH8AAAAAgAAAAAAAAAcgAAAAAgAAADAAAAAAAAABeAA
        AAAAAAD78AAB+AAAAADwAAH/hwB3KfAAAf+HHwAC8AAB/8efAAj0AAH/z58AMPoAAf/v3wDI/QAB///f
        W9L+Sf////8AGv8J/////wDf/4j/////AHD/iP////8AZv+I/////wB0/4D/////AAD/gP////8AAP+A
        /////wAA/+P/////AAD/4/////8AAP/j/////wAQ/4D/////AHD/gP////8AMP/B/////3e8/+P/////
        AEj/4/////8ACP/L/////wCQ/4H/////AFj/gP////93AP+B/////wAE/+P/////AAT/4/////8AvP/j
        /////wDk/+P/////d+j/4/////8AAf/j/////wC8/+P/////AED/4/////937P/j/////wAU
</value>
  </data>
</root>